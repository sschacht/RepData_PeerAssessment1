install.packages("rattle")
library("rattle")
rattle()
install.packages("sqldf")
library("RSQLite")
setwd("~/Eigene Dokumente/Coursera/reproducible_research")
setwd("~/Eigene Dokumente/Coursera/reproducible_research/Project1")
install.packages(knitr)
install.packages(knitr)
library(knitr)
install.packages("knitr")
unzip
unzip{activity.zip}
unzip(activity.zip)
setwd("~/Eigene Dokumente/Coursera/reproducible_research/PeerAssessMent1")
unzip(activity.zip)
temp <- tempfile()
download.file("http://www.newcl.org/data/zipfiles/a1.zip",temp)
data <- read.table(unz(temp, "a1.dat"))
unlink(temp)
setwd("~/Eigene Dokumente/Coursera/reproducible_research/PeerAssessMent1")
file(activity.zip)
unzip("activity.zip")
activity <- read.csv("activity.csv")
View(activity)
data <- read.csv(unzip("activity.zip"))
summary(data)
aggregate(steps~date, data, mean)
tapply(data$steps, data$date, mean)
tapply(data$steps, list(data$date), mean)
aggregate(steps~date, data, mean)
aggregate(steps~date, data, mean)
summary(data)  mnö `ühg-jpnl09jzt7nkoi, i8 9vkfhwhad
# Group by date and perform means on that day
aggregate(steps~date, data, mean)
hist(aggregate(steps~date, data, mean))
z <- aggregate(steps~date, data, mean)
View(z)
hist(z$steps)
aggregate(steps~date, data, sum)
aggregate(steps~date, data, median)
histinfo <- hist(z$steps)
histinfo
aggregate(steps~date, data, mean)
aggregate(steps~date, data, sum)
z <- aggregate(steps~date, data, sum)
mean(z$steps)
median(z$steps)
View(activity)
aggregate(steps~interval, data, mean)
plot.default()
y<-aggregate(steps~interval, data, mean)
View(y)
plot.default(x=y$steps, y=y$interval, type="l", xlab="Interval Series", ylab="Mean Steps")
plot.default(y=y$steps, x=y$interval, type="l", xlab="Interval Series", ylab="Mean Steps")
plot.default(y=y$steps, x=y$interval, type="l", xlab="Interval Series", ylab="Mean Steps")
max(y$steps)
subset(y, y$steps == max(y$steps)
)
subset(y, y$steps == max(y$steps))
subset(y, which.max())
subset(y, which.max(y$steps))
install.packages("rrcovNA")
showClass("SummaryCovNA")
library(rrcovNA)
showClass("SummaryCovNA")
install.packages("VIM")
activity
View(activity)
inputed.act <- irmi(activity)
library("VIM")
inputed.act <- irmi(activity)
library(rrcovNA)
impSeq(activity)
inputed <- impSeq(activity)
View(inputed)
View(activity)
View(inputed)
which( is.na(activity$steps))
which(!is.na(activity$steps))
which(is.na(activity$steps))
subset(activity, which(is.na(activity$steps)))
subset(activity, is.na(activity$steps))
subset(activity, !complete.cases(activity))
subset(activity, !complete.cases(activity))
View(y)
na <- subset(activity, !complete.cases(activity))
output <- merge(na, y, by = 'interval', all.y = F)
View(output)
output <- output[,c('steps','date','interval')]
output
View(activity)
output <- output[,c('steps.y','date','interval')]
output
View(output)
View(output)
names(output)
names(output)[1]
names(output)[1] <- c("steps")
names(output)
View(output)
View(activity)
test <- rbind(activity,output)
View(test)
complete <- subset(activity, complete.cases(activity))
filledActivity <- rbind (complete, output)
summary(filledActivity)
countNA(filledActivity)
countNA(Activity)
countNA(activity)
transform(filledActivity, weekend=as.POSIXlt(date, format='%Y/%m/%d')$wday %in% c(0, 6))
t <- transform(filledActivity, weekend=as.POSIXlt(date, format='%Y/%m/%d')$wday %in% c(0, 6))
View(t)
subset(t, t$weekend == TRUE)
subset(t, t$weekend == "TRUE")
aggregate(weekend~steps, t, sum  )
aggregate(steps~weekend, t, sum  )
weekdays.POSIXt(filledActivity$date)
weekdays.POSIXt(filledActivity$date, format='%Y/%m/%d')
filledActivity
weekdays(as.Date(filledActivity$date)) %in% c("Saturday", "Sunday")
weekdays(as.Date(filledActivity$date))
weekdays(as.Date(filledActivity$date)) %in% c("Samstag","Sonntag")
weekdays(as.Date(filledActivity$date)) %in% c(0, 6)
weekdays(as.Date(filledActivity$date)) %in% c(0, 7)
weekdays(as.Date(filledActivity$date)) %in% c("Samstag","Sonntag")
t <- transform(filledActivity, weekend=weekdays(as.Date(filledActivity$date)) %in% c("Samstag","Sonntag"))
t
View(t)
aggregate(steps~weekend, t, sum  )
t <- transform(filledActivity, as.factor(weekend=weekdays(as.Date(filledActivity$date)) %in% c("Samstag","Sonntag")))
t <- transform(filledActivity, as.factor(weekend=weekdays(as.Date(filledActivity$date)) %in% c("Samstag","Sonntag"))
)
t
t$dayOfWeek <- "weekday"
t
t$dayOfWeek <- "weekday" where t$weekend == true
t$dayOfWeek <- with("weekday", if(t$weekend == true))
index <- c(TRUE, FALSE)
values <- c("weekend", weekday)
values <- c("weekend", "weekday")
View(t)
t$test2 <- values[match(t$weekend, index)]
View(t)
aggregate(steps~weekend, t, sum  )
aggregate(steps~test2, t, sum  )
t$test3 <- factor(values[match(t$weekend, index)])
View(test)
View(t)
t$test3 <- factor(values[match(t$weekend, index)])
y<-aggregate(steps~weekend+interval, t, mean)
View(y)
summary(y)
library("ggplot")
install.packages("ggplot")
install.packages("ggplot2")
library("ggplot")
library("ggplot2")
library("ggplot2")
y<-aggregate(steps~weekend+interval, data, mean)
y<-aggregate(steps~weekend+interval, t, mean)
View(y)
y<-aggregate(steps~interval, t, mean)
View(y)
y<-aggregate(steps~weekend+interval, t, mean)
View(y)
ggplot(y, aes(y$interval, y$steps))
ggplot(y, aes(y$interval, y$steps)) + geom_line
library(ggplot2)
ggplot(y, aes(x = interval, y =stepsS, color = isin)) + geom_line()
library(ggplot2)
ggplot(y, aes(x = interval, y =steps, color = isin)) + geom_line()
library(ggplot2)
ggplot(y, aes(x = interval, y =steps)) + geom_line()
library(ggplot2)
ggplot(y, aes(x = interval, y =steps, color=wekend)) + geom_line()
library(ggplot2)
ggplot(y, aes(x = interval, y =steps, color=weekend)) + geom_line()
